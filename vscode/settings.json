{
    "editor.tabSize": 2,
    "editor.fontFamily": "PragmataPro Liga",
    "editor.fontLigatures": true,
    "editor.fontSize": 15,
    "debug.toolBarLocation": "docked",
    "editor.minimap.enabled": false,
    "explorer.confirmDragAndDrop": false,
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    "html.format.indentInnerHtml": true,
    "editor.renderWhitespace": "boundary",
    "editor.renderControlCharacters": true,
    "explorer.confirmDelete": false,
    "editor.acceptSuggestionOnEnter": "smart",
    "debug.console.fontFamily": "PragmataPro Liga",
    "scm.defaultViewMode": "tree",
    "omnisharp.enableRoslynAnalyzers": true,
    "omnisharp.useEditorFormattingSettings": false,
    "editor.definitionLinkOpensInPeek": true,
    "rust-analyzer.checkOnSave.command": "clippy",
    "gruvboxMaterial.darkPalette": "original",
    "workbench.editorAssociations": {
        "git-rebase-todo": "default"
    },
    "gitlens.menus": {
        "editor": false,
        "editorGroup": false,
        "editorTab": false,
        "explorer": false,
        "scm": {
            "authors": true
        },
        "scmGroupInline": false,
        "scmGroup": false,
        "scmItem": false
    },
    "gitlens.mode.statusBar.enabled": false,
    "debug.allowBreakpointsEverywhere": true,
    "editor.bracketPairColorization.enabled": true,
    "texlab.server.autoDownload": true,
    "csharp.semanticHighlighting.enabled": true,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "redhat.telemetry.enabled": false,
    "gitmoji.outputType": "code",
    "gitmoji.showEmojiCode": true,
    "modalkeys.keybindings": {
        "::doc::\n": {
            "kind": "motion",
            "label": "↓",
            "detail": "move down"
        },
        "\n": [
            "cursorDown",
            {
                "cursorMove": {
                    "to": "wrappedLineFirstNonWhitespaceCharacter"
                }
            }
        ],
        "::doc:: ": {
            "kind": "motion",
            "label": "→",
            "detail": "move right"
        },
        " ": "cursorRight",
        "::doc::h": {
            "kind": "motion",
            "label": "←",
            "detail": "move left"
        },
        "::doc::j": {
            "kind": "motion",
            "label": "↓",
            "detail": "cove down"
        },
        "::doc::k": {
            "kind": "motion",
            "label": "↑",
            "detail": "move up"
        },
        "::doc::l": {
            "kind": "motion",
            "label": "→",
            "detail": "move right"
        },
        "::doc::0": {
            "kind": "motion",
            "label": "sol",
            "detail": "move to start of line"
        },
        "::doc::$": {
            "kind": "motion",
            "label": "eol",
            "detail": "move to end of line"
        },
        "::doc::^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "move to first non-whitespace character on line"
        },
        "::doc::g": {
            "kind": "leader",
            "label": "extended",
            "detail": "various extended commands"
        },
        "::doc::g_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "move to first non-whitespace character on line"
        },
        "::using::cursorMove": {
            "0": {
                "to": "wrappedLineStart",
                "select": "__mode == \"visual\""
            },
            "h": {
                "to": "left",
                "select": "__mode == \"visual\"",
                "value": "__count"
            },
            "j": {
                "to": "down",
                "select": "__mode == \"visual\"",
                "value": "__count"
            },
            "k": {
                "to": "up",
                "select": "__mode == \"visual\"",
                "value": "__count"
            },
            "l": {
                "to": "right",
                "select": "__mode == \"visual\"",
                "value": "__count"
            },
            "$": {
                "to": "wrappedLineEnd",
                "select": "__mode == \"visual\""
            },
            "^": {
                "to": "wrappedLineFirstNonWhitespaceCharacter",
                "select": "__mode == \"visual\""
            },
            "g_": {
                "to": "wrappedLineLastNonWhitespaceCharacter",
                "select": "__mode == \"visual\""
            }
        },
        "::doc::": {
            "kind": "motion",
            "label": "sel first nonwht",
            "detail": "select to first non-whitespace"
        },
        "_": "cursorHomeSelect",
        "::doc::gg": {
            "kind": "motion",
            "label": "doc start",
            "detail": "move to top of document"
        },
        "gg": "cursorTop",
        "visual::gg": "cursorTopSelect",
        "::doc::G": {
            "kind": "motion",
            "label": "doc end",
            "detail": "move to bottom of document"
        },
        "G": "cursorBottom",
        "visual::G": "cursorBottomSelect",
        "::doc::gt": {
            "kind": "window",
            "label": "tab →",
            "detail": "show next editor tab"
        },
        "gt": "workbench.action.nextEditor",
        "::doc::gT": {
            "kind": "window",
            "label": "tab ←",
            "detail": "show previous editor tab"
        },
        "gT": "workbench.action.previousEditor",
        "::doc::w": {
            "kind": "motion",
            "label": "word →",
            "detail": "move to next word start"
        },
        "w": {
            "cursorWordStartRight": {},
            "repeat": "__count"
        },
        "visual::w": {
            "cursorWordStartRightSelect": {},
            "repeat": "__count"
        },
        "::doc::e": {
            "kind": "motion",
            "label": "word →",
            "detail": "move to next word end"
        },
        "e": {
            "cursorWordEndRight": {},
            "repeat": "__count"
        },
        "visual::e": {
            "cursorWordEndRightSelect": {},
            "repeat": "__count"
        },
        "::doc::b": {
            "kind": "motion",
            "label": "word ←",
            "detail": "move to previous word start"
        },
        "b": {
            "cursorWordStartLeft": {},
            "repeat": "__count"
        },
        "visual::b": {
            "cursorWordStartLeftSelect": {},
            "repeat": "__count"
        },
        "::doc::W": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "move to next WORD start; a WORD is a continguous group of non-whitespace characters"
        },
        "W": {
            "modalkeys.search": {
                "text": "\\s+",
                "offset": "exclusive",
                "regex": true,
                "selectTillMatch": "__mode == \"visual\"",
                "highlightMatches": false,
                "executeAfter": {
                    "cursorMove": {
                        "to": "right",
                        "select": "__mode == \"visual\""
                    }
                }
            },
            "repeat": "__count"
        },
        "::doc::E": {
            "kind": "motion",
            "label": "WORD end →",
            "detail": "move to next WORD end; a WORD is a continguous group of non-whitespace characters"
        },
        "E": {
            "modalkeys.search": {
                "text": "\\S+",
                "offset": "inclusive",
                "regex": true,
                "selectTillMatch": "__mode == \"visual\"",
                "highlightMatches": false
            },
            "repeat": "__count"
        },
        "::doc::B": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "move to previous WORD start; a WORD is a continguous group of non-whitespace characters"
        },
        "B": {
            "modalkeys.search": {
                "text": "\\S+",
                "offset": "inclusive",
                "regex": true,
                "backwards": true,
                "selectTillMatch": "__mode == \"visual\"",
                "highlightMatches": false
            },
            "repeat": "__count"
        },
        "::doc::}": {
            "kind": "motion",
            "label": "paragraph →",
            "detail": "move to next paragraph"
        },
        "}": {
            "modalkeys.search": {
                "text": "^\\s*$",
                "offset": "inclusive",
                "regex": true,
                "backwards": false,
                "selectTillMatch": "__mode == \"visual\"",
                "highlightMatches": false,
                "executeAfter": {
                    "cursorMove": {
                        "to": "right",
                        "select": "__mode == \"visual\""
                    }
                }
            },
            "repeat": "__count"
        },
        "::doc::{": {
            "kind": "motion",
            "label": "paragraph ←",
            "detail": "move to previous paragraph"
        },
        "{": {
            "modalkeys.search": {
                "text": "^\\s*$",
                "offset": "inclusive",
                "regex": true,
                "backwards": true,
                "selectTillMatch": "__mode == \"visual\"",
                "highlightMatches": false
            },
            "repeat": "__count"
        },
        "::doc::H": {
            "kind": "motion",
            "label": "view top",
            "detail": "move cursor so it is at the top of the viewport"
        },
        "H": {
            "cursorMove": {
                "to": "viewPortTop",
                "select": "__mode == \"visual\""
            }
        },
        "::doc::M": {
            "kind": "motion",
            "label": "view center",
            "detail": "move cursor so it is at the center of the viewport"
        },
        "M": {
            "cursorMove": {
                "to": "viewPortCenter",
                "select": "__mode == \"visual\""
            }
        },
        "::doc::L": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "move cursor so it is at the bottom of the viewport"
        },
        "L": {
            "cursorMove": {
                "to": "viewPortBottom",
                "select": "__mode == \"visual\""
            }
        },
        "::doc::%": {
            "kind": "motion",
            "label": "to bracket",
            "detail": "move cursor to the match bracket"
        },
        "%": "editor.action.jumpToBracket",
        "::doc::visual::%": {
            "kind": "motion",
            "label": "expand",
            "detail": "expand selection intelligently, use VSCode smart expand"
        },
        "visual::%": "editor.action.smartSelect.expand",
        "::doc::f": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "f": {
            "modalkeys.search": {
                "acceptAfter": 1,
                "offset": "inclusive",
                "selectTillMatch": "__mode == 'visual'"
            }
        },
        "::doc::F": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "F": {
            "modalkeys.search": {
                "acceptAfter": 1,
                "backwards": true,
                "offset": "inclusive",
                "selectTillMatch": "__mode == 'visual'"
            }
        },
        "::doc::t": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "t": {
            "modalkeys.search": {
                "acceptAfter": 1,
                "offset": "exclusive",
                "selectTillMatch": "__mode == 'visual'"
            }
        },
        "::doc::T": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "T": {
            "modalkeys.search": {
                "acceptAfter": 1,
                "backwards": true,
                "offset": "exclusive",
                "selectTillMatch": "__mode == 'visual'"
            }
        },
        "::doc::s": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "s": {
            "modalkeys.search": {
                "caseSensitive": true,
                "acceptAfter": 2,
                "backwards": false,
                "offset": "start",
                "wrapAround": true
            }
        },
        "::doc::S": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "S": {
            "modalkeys.search": {
                "casSensitive": true,
                "acceptAfter": 2,
                "backwards": true,
                "offset": "start",
                "wrapAround": true
            }
        },
        "::doc::;": {
            "kind": "motion",
            "label": "repeat motion →",
            "detail": "Repeating a searching motion (e.g. `f`)"
        },
        ";": "modalkeys.nextMatch",
        "::doc::,": {
            "kind": "motion",
            "label": "repeat motion ←",
            "detail": "Repeating a searching motion (e.g. `f`) backwards"
        },
        ",": "modalkeys.previousMatch",
        "::doc::normal::i": {
            "kind": "mode",
            "label": "insert",
            "detail": "switch to insert mode"
        },
        "normal::i": "modalkeys.enterInsert",
        "::doc::I": {
            "kind": "mode",
            "label": "insert sol",
            "detail": "move to non-whitespace start of line and switch to insert mode"
        },
        "I": [
            "cursorHome",
            "modalkeys.enterInsert"
        ],
        "::doc::normal::a": {
            "kind": "mode",
            "label": "append",
            "detail": "start insert mode after the current character"
        },
        "normal::a": [
            {
                "if": "__char == ''",
                "else": "cursorRight"
            },
            "modalkeys.enterInsert"
        ],
        "::doc::normal::A": {
            "kind": "mode",
            "label": "append eol",
            "detail": "move to end of line and switch to insert mode"
        },
        "A": [
            "cursorEnd",
            "modalkeys.enterInsert"
        ],
        "::doc::normal::o": {
            "kind": "mode",
            "label": "open below",
            "detail": "create a line below this one and start insert mode"
        },
        "o": [
            "editor.action.insertLineAfter",
            "modalkeys.enterInsert"
        ],
        "::doc::normal::O": {
            "kind": "mode",
            "label": "open above",
            "detail": "create a line above this one and start insert mode"
        },
        "O": [
            "editor.action.insertLineBefore",
            "modalkeys.enterInsert"
        ],
        "::doc::normal::v": {
            "kind": "mode",
            "label": "visual",
            "detail": "start visual-selection mode"
        },
        "::doc::visual::v": {
            "kind": "mode",
            "label": "clear selection",
            "detail": "clear selection and return to normal mode"
        },
        "v": "modalkeys.toggleSelection",
        "V": [
            {
                "cursorMove": {
                    "to": "wrappedLineEnd",
                    "select": "__mode == \"visual\""
                }
            },
            "modalkeys.toggleSelection",
            {
                "cursorMove": {
                    "to": "wrappedLineStart",
                    "select": "__mode == \"visual\""
                }
            }
        ],
        "::doc::x": {
            "kind": "action",
            "label": "del char →",
            "detail": "delete character to right"
        },
        "x": {
            "deleteRight": {},
            "repeat": "__count"
        },
        "::doc::X": {
            "kind": "action",
            "label": "del char ←",
            "detail": "delete character to left"
        },
        "X": {
            "deleteLeft": {},
            "repeat": "__count"
        },
        "::doc::r": {
            "kind": "action",
            "label": "replace",
            "detail": "replace a single character"
        },
        "r": "modalkeys.replaceChar",
        "::doc::D": {
            "kind": "action",
            "label": "delete eol",
            "detail": "Delete from cursor to end of line"
        },
        "D": [
            "modalkeys.cancelSelection",
            "cursorEndSelect",
            "editor.action.clipboardCopyAction",
            "deleteRight",
            "modalkeys.cancelSelection"
        ],
        "::doc::C": {
            "kind": "action",
            "label": "change eol",
            "detail": "Change from cursor to end of line"
        },
        "C": {
            "modalkeys.typeKeys": {
                "keys": "Di"
            }
        },
        "::doc::Y": {
            "kind": "action",
            "label": "copy eol",
            "detail": "Copy from cursor to end of line"
        },
        "Y": [
            "modalkeys.cancelSelection",
            "cursorEndSelect",
            "editor.action.clipboardCopyAction",
            "modalkeys.cancelSelection"
        ],
        "::doc::p": {
            "kind": "action",
            "label": "paste →",
            "detail": "paste after cursor"
        },
        "p": [
            "cursorRight",
            "editor.action.clipboardPasteAction",
            "modalkeys.cancelSelection"
        ],
        "::doc::P": {
            "kind": "action",
            "label": "paste ←",
            "detail": "paste before cursor"
        },
        "P": [
            "editor.action.clipboardPasteAction",
            "modalkeys.cancelSelection"
        ],
        "::doc::J": {
            "kind": "action",
            "label": "join lines",
            "detail": "remove newline char between this and next line"
        },
        "J": "editor.action.joinLines",
        "::doc::u": {
            "kind": "action",
            "label": "undo",
            "detail": "Undo last action"
        },
        "u": [
            "undo",
            "modalkeys.cancelSelection"
        ],
        "::doc::U": {
            "kind": "action",
            "label": "redo",
            "detail": "Redo last action"
        },
        "U": [
            "redo",
            "modalkeys.cancelSelection"
        ],
        "::doc::.": {
            "kind": "action",
            "label": "repeat",
            "detail": "repeat the last action or operator"
        },
        ".": "modalkeys.repeatLastChange",
        "::doc::normal::d": {
            "kind": "operator",
            "label": "delete",
            "detail": "delete text and store it in the clipboard (e.g. copy)"
        },
        "::doc::visual::d": {
            "kind": "operator",
            "label": "delete",
            "detail": "delete text and store it in the clipboard (e.g. copy)"
        },
        "::doc::normal::dd": {
            "kind": "motion",
            "label": "line",
            "detail": "repeating an operator performs the action on an entire line"
        },
        "normal::dd": [
            "modalkeys.cancelMultipleSelections",
            "expandLineSelection",
            "editor.action.clipboardCutAction"
        ],
        "visual::d": "editor.action.clipboardCutAction",
        "normal::d0": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v0"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dj": {
            "kind": "motion",
            "label": "↓",
            "detail": "operate over this line and `count` number of lines down"
        },
        "normal::dj": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "down",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dk": {
            "kind": "motion",
            "label": "↑",
            "detail": "operate over this line and `count` number of lines up"
        },
        "normal::dk": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "up",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dh": {
            "kind": "motion",
            "label": "←",
            "detail": "operate over this line and `count` number of characters to the left"
        },
        "normal::dh": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "left",
                        "select": true,
                        "value": "__count"
                    }
                }
            ],
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dl": {
            "kind": "motion",
            "label": "→",
            "detail": "operate over this line and `count` number of characters to the right"
        },
        "normal::dl": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorMove": {
                    "to": "right",
                    "select": true,
                    "value": "__count"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::di": {
            "kind": "leader",
            "label": "inside pair",
            "detail": "motions within an area, exclusive of the area's boundaries"
        },
        "::doc::normal::di(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate inside parentheses"
        },
        "normal::di(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesis",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::da": {
            "kind": "leader",
            "label": "around pair",
            "detail": "motions within an area, inclusive of the area's boundaries"
        },
        "::doc::normal::da(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate around parentheses"
        },
        "normal::da(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesisOuter",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::di[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate inside braces"
        },
        "normal::di[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBrackets",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::da[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate around braces"
        },
        "normal::da[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBracketsOuter",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::di{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate inside brackets"
        },
        "normal::di{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBrackets",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::da{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate around brackets"
        },
        "normal::da{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBracketsOuter",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::di<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate inside caret"
        },
        "normal::di<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBrackets",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::da<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate around caret"
        },
        "normal::da<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBracketsOuter",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::d0": {
            "kind": "motion",
            "label": "sol",
            "detail": "operate up to start of line"
        },
        "::doc::normal::d$": {
            "kind": "motion",
            "label": "eol",
            "detail": "operate up to end of line"
        },
        "::doc::normal::d^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::dg_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::dgg": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate back to start of document"
        },
        "::doc::normal::dG": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate up to end of document"
        },
        "::doc::normal::dH": {
            "kind": "motion",
            "label": "view top",
            "detail": "operate to the top of the viewport"
        },
        "::doc::normal::dM": {
            "kind": "motion",
            "label": "view center",
            "detail": "operate to the center of the viewport"
        },
        "::doc::normal::dL": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "operate to the bottom of the viewport"
        },
        "::doc::normal::d%": {
            "kind": "motion",
            "label": "smart region",
            "detail": "operate over the smallest 'smart' region, e.g. when using smart selection expansion."
        },
        "normal::d^": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v^"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::d$": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v$"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dG": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vG"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dH": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vH"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dM": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vM"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dL": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vL"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::d%": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v%"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dg_": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vg_"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dgg": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vgg"
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::daw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::diw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dap": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::dip": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::da'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::di'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::da\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::di\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::da`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "normal::di`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dw": {
            "kind": "motion",
            "label": "word →",
            "detail": "operate to next word start"
        },
        "normal::dw": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartRightSelect": {},
                "repeat": "__count"
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::de": {
            "kind": "motion",
            "label": "word end →",
            "detail": "operate to next word end"
        },
        "normal::de": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordEndRightSelect": {},
                "repeat": "__count"
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::db": {
            "kind": "motion",
            "label": "word ←",
            "detail": "operate to previous word start"
        },
        "normal::db": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartLeftSelect": {},
                "repeat": "__count"
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dW": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to next WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::dW": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::dB": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to previous WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::dB": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "backwards": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::d[": {
            "kind": "motion",
            "label": "indent (exclusive)",
            "detail": "operate within indented region (all the same indent or more indendented than current line)"
        },
        "::doc::normal::d{": {
            "kind": "motion",
            "label": "indent (inclusive)",
            "detail": "operate around indented region (all the same indent or more indendented than current line, plus the line just above and below this)"
        },
        "normal::d[": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-inner",
            "editor.action.clipboardCutAction"
        ],
        "normal::d{": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-outer",
            "editor.action.clipboardCutAction"
        ],
        "::doc::normal::y": {
            "kind": "operator",
            "label": "copy",
            "detail": "copy the text to clipboard"
        },
        "::doc::visual::y": {
            "kind": "operator",
            "label": "copy",
            "detail": "copy the text to clipboard"
        },
        "::doc::normal::yy": {
            "kind": "motion",
            "label": "line",
            "detail": "repeating an operator performs the action on an entire line"
        },
        "normal::yy": [
            "modalkeys.cancelMultipleSelections",
            "expandLineSelection",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ],
            {
                "cursorMove": {
                    "to": "up",
                    "select": false,
                    "value": 1
                }
            }
        ],
        "visual::y": [
            "editor.action.clipboardCopyAction",
            "modalkeys.cancelMultipleSelections"
        ],
        "normal::y0": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v0"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yj": {
            "kind": "motion",
            "label": "↓",
            "detail": "operate over this line and `count` number of lines down"
        },
        "normal::yj": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "down",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yk": {
            "kind": "motion",
            "label": "↑",
            "detail": "operate over this line and `count` number of lines up"
        },
        "normal::yk": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "up",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yh": {
            "kind": "motion",
            "label": "←",
            "detail": "operate over this line and `count` number of characters to the left"
        },
        "normal::yh": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "left",
                        "select": true,
                        "value": "__count"
                    }
                }
            ],
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yl": {
            "kind": "motion",
            "label": "→",
            "detail": "operate over this line and `count` number of characters to the right"
        },
        "normal::yl": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorMove": {
                    "to": "right",
                    "select": true,
                    "value": "__count"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yi": {
            "kind": "leader",
            "label": "inside pair",
            "detail": "motions within an area, exclusive of the area's boundaries"
        },
        "::doc::normal::yi(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate inside parentheses"
        },
        "normal::yi(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesis",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::ya": {
            "kind": "leader",
            "label": "around pair",
            "detail": "motions within an area, inclusive of the area's boundaries"
        },
        "::doc::normal::ya(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate around parentheses"
        },
        "normal::ya(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesisOuter",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yi[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate inside braces"
        },
        "normal::yi[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBrackets",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::ya[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate around braces"
        },
        "normal::ya[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBracketsOuter",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yi{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate inside brackets"
        },
        "normal::yi{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBrackets",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::ya{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate around brackets"
        },
        "normal::ya{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBracketsOuter",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yi<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate inside caret"
        },
        "normal::yi<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBrackets",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::ya<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate around caret"
        },
        "normal::ya<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBracketsOuter",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::y0": {
            "kind": "motion",
            "label": "sol",
            "detail": "operate up to start of line"
        },
        "::doc::normal::y$": {
            "kind": "motion",
            "label": "eol",
            "detail": "operate up to end of line"
        },
        "::doc::normal::y^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::yg_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::ygg": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate back to start of document"
        },
        "::doc::normal::yG": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate up to end of document"
        },
        "::doc::normal::yH": {
            "kind": "motion",
            "label": "view top",
            "detail": "operate to the top of the viewport"
        },
        "::doc::normal::yM": {
            "kind": "motion",
            "label": "view center",
            "detail": "operate to the center of the viewport"
        },
        "::doc::normal::yL": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "operate to the bottom of the viewport"
        },
        "::doc::normal::y%": {
            "kind": "motion",
            "label": "smart region",
            "detail": "operate over the smallest 'smart' region, e.g. when using smart selection expansion."
        },
        "normal::y^": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v^"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::y$": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v$"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yG": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vG"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yH": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vH"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yM": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vM"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yL": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vL"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::y%": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v%"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yg_": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vg_"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::ygg": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vgg"
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yaw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yiw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yap": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yip": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::ya'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yi'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::ya\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yi\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::ya`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::yi`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yw": {
            "kind": "motion",
            "label": "word →",
            "detail": "operate to next word start"
        },
        "normal::yw": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::ye": {
            "kind": "motion",
            "label": "word end →",
            "detail": "operate to next word end"
        },
        "normal::ye": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordEndRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yb": {
            "kind": "motion",
            "label": "word ←",
            "detail": "operate to previous word start"
        },
        "normal::yb": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartLeftSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yW": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to next WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::yW": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::yB": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to previous WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::yB": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "backwards": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::y[": {
            "kind": "motion",
            "label": "indent (exclusive)",
            "detail": "operate within indented region (all the same indent or more indendented than current line)"
        },
        "::doc::normal::y{": {
            "kind": "motion",
            "label": "indent (inclusive)",
            "detail": "operate around indented region (all the same indent or more indendented than current line, plus the line just above and below this)"
        },
        "normal::y[": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-inner",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::y{": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-outer",
            [
                "editor.action.clipboardCopyAction",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::c": {
            "kind": "operator",
            "label": "change",
            "detail": "delete text and switch to insert mode"
        },
        "::doc::visual::c": {
            "kind": "operator",
            "label": "change",
            "detail": "delete text and switch to insert mode"
        },
        "::doc::normal::cc": {
            "kind": "motion",
            "label": "line",
            "detail": "repeating an operator performs the action on an entire line"
        },
        "normal::cc": [
            "modalkeys.cancelMultipleSelections",
            "expandLineSelection",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "visual::c": {
            "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
            "then": [
                "deleteRight",
                "editor.action.insertLineBefore",
                "modalkeys.enterInsert"
            ],
            "else": [
                "deleteRight",
                "modalkeys.enterInsert"
            ]
        },
        "normal::c0": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v0"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cj": {
            "kind": "motion",
            "label": "↓",
            "detail": "operate over this line and `count` number of lines down"
        },
        "normal::cj": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "down",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ck": {
            "kind": "motion",
            "label": "↑",
            "detail": "operate over this line and `count` number of lines up"
        },
        "normal::ck": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "up",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ch": {
            "kind": "motion",
            "label": "←",
            "detail": "operate over this line and `count` number of characters to the left"
        },
        "normal::ch": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "left",
                        "select": true,
                        "value": "__count"
                    }
                }
            ],
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cl": {
            "kind": "motion",
            "label": "→",
            "detail": "operate over this line and `count` number of characters to the right"
        },
        "normal::cl": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorMove": {
                    "to": "right",
                    "select": true,
                    "value": "__count"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ci": {
            "kind": "leader",
            "label": "inside pair",
            "detail": "motions within an area, exclusive of the area's boundaries"
        },
        "::doc::normal::ci(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate inside parentheses"
        },
        "normal::ci(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesis",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ca": {
            "kind": "leader",
            "label": "around pair",
            "detail": "motions within an area, inclusive of the area's boundaries"
        },
        "::doc::normal::ca(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate around parentheses"
        },
        "normal::ca(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesisOuter",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ci[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate inside braces"
        },
        "normal::ci[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBrackets",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ca[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate around braces"
        },
        "normal::ca[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBracketsOuter",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ci{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate inside brackets"
        },
        "normal::ci{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBrackets",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ca{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate around brackets"
        },
        "normal::ca{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBracketsOuter",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ci<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate inside caret"
        },
        "normal::ci<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBrackets",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ca<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate around caret"
        },
        "normal::ca<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBracketsOuter",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::c0": {
            "kind": "motion",
            "label": "sol",
            "detail": "operate up to start of line"
        },
        "::doc::normal::c$": {
            "kind": "motion",
            "label": "eol",
            "detail": "operate up to end of line"
        },
        "::doc::normal::c^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::cg_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::cgg": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate back to start of document"
        },
        "::doc::normal::cG": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate up to end of document"
        },
        "::doc::normal::cH": {
            "kind": "motion",
            "label": "view top",
            "detail": "operate to the top of the viewport"
        },
        "::doc::normal::cM": {
            "kind": "motion",
            "label": "view center",
            "detail": "operate to the center of the viewport"
        },
        "::doc::normal::cL": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "operate to the bottom of the viewport"
        },
        "::doc::normal::c%": {
            "kind": "motion",
            "label": "smart region",
            "detail": "operate over the smallest 'smart' region, e.g. when using smart selection expansion."
        },
        "normal::c^": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v^"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::c$": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v$"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cG": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vG"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cH": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vH"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cM": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vM"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cL": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vL"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::c%": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v%"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cg_": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vg_"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cgg": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vgg"
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::caw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ciw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cap": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::cip": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ca'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ci'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ca\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ci\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ca`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::ci`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cw": {
            "kind": "motion",
            "label": "word →",
            "detail": "operate to next word start"
        },
        "normal::cw": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartRightSelect": {},
                "repeat": "__count"
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::ce": {
            "kind": "motion",
            "label": "word end →",
            "detail": "operate to next word end"
        },
        "normal::ce": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordEndRightSelect": {},
                "repeat": "__count"
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cb": {
            "kind": "motion",
            "label": "word ←",
            "detail": "operate to previous word start"
        },
        "normal::cb": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartLeftSelect": {},
                "repeat": "__count"
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cW": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to next WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::cW": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::cB": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to previous WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::cB": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "backwards": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::c[": {
            "kind": "motion",
            "label": "indent (exclusive)",
            "detail": "operate within indented region (all the same indent or more indendented than current line)"
        },
        "::doc::normal::c{": {
            "kind": "motion",
            "label": "indent (inclusive)",
            "detail": "operate around indented region (all the same indent or more indendented than current line, plus the line just above and below this)"
        },
        "normal::c[": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-inner",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "normal::c{": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-outer",
            {
                "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                "then": [
                    "deleteRight",
                    "editor.action.insertLineBefore",
                    "modalkeys.enterInsert"
                ],
                "else": [
                    "deleteRight",
                    "modalkeys.enterInsert"
                ]
            }
        ],
        "::doc::normal::<": {
            "kind": "operator",
            "label": "dedent",
            "detail": "deindent text by current file's indent size"
        },
        "::doc::visual::<": {
            "kind": "operator",
            "label": "dedent",
            "detail": "deindent text by current file's indent size"
        },
        "::doc::normal::<<": {
            "kind": "motion",
            "label": "line",
            "detail": "repeating an operator performs the action on an entire line"
        },
        "normal::<<": [
            "modalkeys.cancelMultipleSelections",
            "expandLineSelection",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "visual::<": [
            "editor.action.outdentLines",
            "modalkeys.cancelMultipleSelections"
        ],
        "normal::<0": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v0"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<j": {
            "kind": "motion",
            "label": "↓",
            "detail": "operate over this line and `count` number of lines down"
        },
        "normal::<j": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "down",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<k": {
            "kind": "motion",
            "label": "↑",
            "detail": "operate over this line and `count` number of lines up"
        },
        "normal::<k": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "up",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<h": {
            "kind": "motion",
            "label": "←",
            "detail": "operate over this line and `count` number of characters to the left"
        },
        "normal::<h": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "left",
                        "select": true,
                        "value": "__count"
                    }
                }
            ],
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<l": {
            "kind": "motion",
            "label": "→",
            "detail": "operate over this line and `count` number of characters to the right"
        },
        "normal::<l": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorMove": {
                    "to": "right",
                    "select": true,
                    "value": "__count"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<i": {
            "kind": "leader",
            "label": "inside pair",
            "detail": "motions within an area, exclusive of the area's boundaries"
        },
        "::doc::normal::<i(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate inside parentheses"
        },
        "normal::<i(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesis",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<a": {
            "kind": "leader",
            "label": "around pair",
            "detail": "motions within an area, inclusive of the area's boundaries"
        },
        "::doc::normal::<a(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate around parentheses"
        },
        "normal::<a(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesisOuter",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<i[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate inside braces"
        },
        "normal::<i[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBrackets",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<a[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate around braces"
        },
        "normal::<a[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBracketsOuter",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<i{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate inside brackets"
        },
        "normal::<i{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBrackets",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<a{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate around brackets"
        },
        "normal::<a{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBracketsOuter",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<i<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate inside caret"
        },
        "normal::<i<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBrackets",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<a<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate around caret"
        },
        "normal::<a<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBracketsOuter",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<0": {
            "kind": "motion",
            "label": "sol",
            "detail": "operate up to start of line"
        },
        "::doc::normal::<$": {
            "kind": "motion",
            "label": "eol",
            "detail": "operate up to end of line"
        },
        "::doc::normal::<^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::<g_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::<gg": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate back to start of document"
        },
        "::doc::normal::<G": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate up to end of document"
        },
        "::doc::normal::<H": {
            "kind": "motion",
            "label": "view top",
            "detail": "operate to the top of the viewport"
        },
        "::doc::normal::<M": {
            "kind": "motion",
            "label": "view center",
            "detail": "operate to the center of the viewport"
        },
        "::doc::normal::<L": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "operate to the bottom of the viewport"
        },
        "::doc::normal::<%": {
            "kind": "motion",
            "label": "smart region",
            "detail": "operate over the smallest 'smart' region, e.g. when using smart selection expansion."
        },
        "normal::<^": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v^"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<$": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v$"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<G": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vG"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<H": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vH"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<M": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vM"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<L": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vL"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<%": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v%"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<g_": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vg_"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<gg": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vgg"
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<aw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<iw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<ap": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<ip": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<a'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<i'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<a\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<i\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<a`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<i`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<w": {
            "kind": "motion",
            "label": "word →",
            "detail": "operate to next word start"
        },
        "normal::<w": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<e": {
            "kind": "motion",
            "label": "word end →",
            "detail": "operate to next word end"
        },
        "normal::<e": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordEndRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<b": {
            "kind": "motion",
            "label": "word ←",
            "detail": "operate to previous word start"
        },
        "normal::<b": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartLeftSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<W": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to next WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::<W": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<B": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to previous WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::<B": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "backwards": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::<[": {
            "kind": "motion",
            "label": "indent (exclusive)",
            "detail": "operate within indented region (all the same indent or more indendented than current line)"
        },
        "::doc::normal::<{": {
            "kind": "motion",
            "label": "indent (inclusive)",
            "detail": "operate around indented region (all the same indent or more indendented than current line, plus the line just above and below this)"
        },
        "normal::<[": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-inner",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::<{": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-outer",
            [
                "editor.action.outdentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>": {
            "kind": "operator",
            "label": "indent",
            "detail": "indent text by current file's indent size"
        },
        "::doc::visual::>": {
            "kind": "operator",
            "label": "indent",
            "detail": "indent text by current file's indent size"
        },
        "::doc::normal::>>": {
            "kind": "motion",
            "label": "line",
            "detail": "repeating an operator performs the action on an entire line"
        },
        "normal::>>": [
            "modalkeys.cancelMultipleSelections",
            "expandLineSelection",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "visual::>": [
            "editor.action.indentLines",
            "modalkeys.cancelMultipleSelections"
        ],
        "normal::>0": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v0"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>j": {
            "kind": "motion",
            "label": "↓",
            "detail": "operate over this line and `count` number of lines down"
        },
        "normal::>j": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "down",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>k": {
            "kind": "motion",
            "label": "↑",
            "detail": "operate over this line and `count` number of lines up"
        },
        "normal::>k": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "up",
                        "by": "wrappedLine",
                        "select": true,
                        "value": "__count"
                    }
                },
                "expandLineSelection"
            ],
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>h": {
            "kind": "motion",
            "label": "←",
            "detail": "operate over this line and `count` number of characters to the left"
        },
        "normal::>h": [
            "modalkeys.cancelMultipleSelections",
            [
                {
                    "cursorMove": {
                        "to": "left",
                        "select": true,
                        "value": "__count"
                    }
                }
            ],
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>l": {
            "kind": "motion",
            "label": "→",
            "detail": "operate over this line and `count` number of characters to the right"
        },
        "normal::>l": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorMove": {
                    "to": "right",
                    "select": true,
                    "value": "__count"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>i": {
            "kind": "leader",
            "label": "inside pair",
            "detail": "motions within an area, exclusive of the area's boundaries"
        },
        "::doc::normal::>i(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate inside parentheses"
        },
        "normal::>i(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesis",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>a": {
            "kind": "leader",
            "label": "around pair",
            "detail": "motions within an area, inclusive of the area's boundaries"
        },
        "::doc::normal::>a(": {
            "kind": "motion",
            "label": "parens",
            "detail": "operate around parentheses"
        },
        "normal::>a(": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectParenthesisOuter",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>i[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate inside braces"
        },
        "normal::>i[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBrackets",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>a[": {
            "kind": "motion",
            "label": "braces",
            "detail": "operate around braces"
        },
        "normal::>a[": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectSquareBracketsOuter",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>i{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate inside brackets"
        },
        "normal::>i{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBrackets",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>a{": {
            "kind": "motion",
            "label": "brackets",
            "detail": "operate around brackets"
        },
        "normal::>a{": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectCurlyBracketsOuter",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>i<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate inside caret"
        },
        "normal::>i<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBrackets",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>a<": {
            "kind": "motion",
            "label": "caret",
            "detail": "operate around caret"
        },
        "normal::>a<": [
            "modalkeys.cancelMultipleSelections",
            "extension.selectAngleBracketsOuter",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>0": {
            "kind": "motion",
            "label": "sol",
            "detail": "operate up to start of line"
        },
        "::doc::normal::>$": {
            "kind": "motion",
            "label": "eol",
            "detail": "operate up to end of line"
        },
        "::doc::normal::>^": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::>g_": {
            "kind": "motion",
            "label": "first nonwht",
            "detail": "operate up to first non-whitespace character on line"
        },
        "::doc::normal::>gg": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate back to start of document"
        },
        "::doc::normal::>G": {
            "kind": "motion",
            "label": "eof",
            "detail": "operate up to end of document"
        },
        "::doc::normal::>H": {
            "kind": "motion",
            "label": "view top",
            "detail": "operate to the top of the viewport"
        },
        "::doc::normal::>M": {
            "kind": "motion",
            "label": "view center",
            "detail": "operate to the center of the viewport"
        },
        "::doc::normal::>L": {
            "kind": "motion",
            "label": "view bottom",
            "detail": "operate to the bottom of the viewport"
        },
        "::doc::normal::>%": {
            "kind": "motion",
            "label": "smart region",
            "detail": "operate over the smallest 'smart' region, e.g. when using smart selection expansion."
        },
        "normal::>^": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v^"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>$": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v$"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>G": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vG"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>H": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vH"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>M": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vM"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>L": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vL"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>%": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "v%"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>g_": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vg_"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>gg": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.typeKeys": {
                    "keys": "vgg"
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>aw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>iw": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\\W",
                    "to": "\\W",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>ap": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>ip": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "^\\s*$",
                    "to": "^\\s*$",
                    "regex": true,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>a'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>i'": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "'",
                    "to": "'",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>a\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>i\"": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "\"",
                    "to": "\"",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>a`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": true
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>i`": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.selectBetween": {
                    "from": "`",
                    "to": "`",
                    "regex": false,
                    "docScope": true,
                    "inclusive": false
                }
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>w": {
            "kind": "motion",
            "label": "word →",
            "detail": "operate to next word start"
        },
        "normal::>w": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>e": {
            "kind": "motion",
            "label": "word end →",
            "detail": "operate to next word end"
        },
        "normal::>e": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordEndRightSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>b": {
            "kind": "motion",
            "label": "word ←",
            "detail": "operate to previous word start"
        },
        "normal::>b": [
            "modalkeys.cancelMultipleSelections",
            {
                "cursorWordStartLeftSelect": {},
                "repeat": "__count"
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>W": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to next WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::>W": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>B": {
            "kind": "motion",
            "label": "WORD →",
            "detail": "operate to previous WORD start; WORD's are contiguous non-whitespace characters"
        },
        "normal::>B": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "text": "\\S+",
                    "offset": "inclusive",
                    "regex": true,
                    "backwards": true,
                    "selectTillMatch": true,
                    "highlightMatches": false
                },
                "repeat": "__count"
            },
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::>[": {
            "kind": "motion",
            "label": "indent (exclusive)",
            "detail": "operate within indented region (all the same indent or more indendented than current line)"
        },
        "::doc::normal::>{": {
            "kind": "motion",
            "label": "indent (inclusive)",
            "detail": "operate around indented region (all the same indent or more indendented than current line, plus the line just above and below this)"
        },
        "normal::>[": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-inner",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "normal::>{": [
            "modalkeys.cancelMultipleSelections",
            "vscode-select-by-indent.select-outer",
            [
                "editor.action.indentLines",
                "modalkeys.cancelMultipleSelections"
            ]
        ],
        "::doc::normal::::doc::df": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::::doc::df": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    }
                }
            }
        ],
        "::doc::normal::::doc::dF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::::doc::dF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    }
                }
            }
        ],
        "::doc::normal::::doc::dt": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::::doc::dt": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    }
                }
            }
        ],
        "::doc::normal::::doc::dT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::::doc::dT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    }
                }
            }
        ],
        "::doc::normal::::doc::ds": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::::doc::ds": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::dS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::::doc::dS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "delete",
                        "detail": "delete text and store it in the clipboard (e.g. copy)"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::df": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::df": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": "editor.action.clipboardCutAction"
                }
            }
        ],
        "::doc::normal::dF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::dF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": "editor.action.clipboardCutAction"
                }
            }
        ],
        "::doc::normal::dt": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::dt": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": "editor.action.clipboardCutAction"
                }
            }
        ],
        "::doc::normal::dT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::dT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": "editor.action.clipboardCutAction"
                }
            }
        ],
        "::doc::normal::ds": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::ds": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": "editor.action.clipboardCutAction",
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::dS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::dS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": "editor.action.clipboardCutAction",
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::yf": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::::doc::yf": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    }
                }
            }
        ],
        "::doc::normal::::doc::yF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::::doc::yF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    }
                }
            }
        ],
        "::doc::normal::::doc::yt": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::::doc::yt": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    }
                }
            }
        ],
        "::doc::normal::::doc::yT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::::doc::yT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    }
                }
            }
        ],
        "::doc::normal::::doc::ys": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::::doc::ys": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::yS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::::doc::yS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "copy",
                        "detail": "copy the text to clipboard"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::yf": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::yf": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::yF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::yF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::yt": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::yt": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::yT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::yT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::ys": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::ys": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::yS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::yS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.clipboardCopyAction",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::cf": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::::doc::cf": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    }
                }
            }
        ],
        "::doc::normal::::doc::cF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::::doc::cF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    }
                }
            }
        ],
        "::doc::normal::::doc::ct": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::::doc::ct": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    }
                }
            }
        ],
        "::doc::normal::::doc::cT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::::doc::cT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    }
                }
            }
        ],
        "::doc::normal::::doc::cs": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::::doc::cs": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::cS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::::doc::cS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "change",
                        "detail": "delete text and switch to insert mode"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::cf": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::cf": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    }
                }
            }
        ],
        "::doc::normal::cF": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::cF": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    }
                }
            }
        ],
        "::doc::normal::ct": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::ct": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    }
                }
            }
        ],
        "::doc::normal::cT": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::cT": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    }
                }
            }
        ],
        "::doc::normal::cs": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::cs": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::cS": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::cS": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "if": "!__selection.isSingleLine && __selection.end.character == 0 && __selection.start.character == 0",
                        "then": [
                            "deleteRight",
                            "editor.action.insertLineBefore",
                            "modalkeys.enterInsert"
                        ],
                        "else": [
                            "deleteRight",
                            "modalkeys.enterInsert"
                        ]
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::<f": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::::doc::<f": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::<F": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::::doc::<F": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::<t": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::::doc::<t": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::<T": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::::doc::<T": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::<s": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::::doc::<s": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::<S": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::::doc::<S": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "dedent",
                        "detail": "deindent text by current file's indent size"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::<f": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::<f": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::<F": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::<F": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::<t": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::<t": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::<T": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::<T": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::<s": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::<s": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::<S": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::<S": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.outdentLines",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::>f": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::::doc::>f": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::>F": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::::doc::>F": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::>t": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::::doc::>t": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::>T": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::::doc::>T": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    }
                }
            }
        ],
        "::doc::normal::::doc::>s": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::::doc::>s": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::::doc::>S": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::::doc::>S": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": {
                        "kind": "operator",
                        "label": "indent",
                        "detail": "indent text by current file's indent size"
                    },
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::>f": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to and including given character"
        },
        "normal::>f": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::>F": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to and including given character (moving backwards)"
        },
        "normal::>F": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "inclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::>t": {
            "kind": "motion",
            "label": "find char →",
            "detail": "move/operate up to given character"
        },
        "normal::>t": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::>T": {
            "kind": "motion",
            "label": "find char ←",
            "detail": "move/operate up to given character (moving backwards)"
        },
        "normal::>T": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "acceptAfter": 1,
                    "backwards": true,
                    "offset": "exclusive",
                    "selectTillMatch": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ]
                }
            }
        ],
        "::doc::normal::>s": {
            "kind": "motion",
            "label": "find char pair",
            "detail": "move/operate to next character pair"
        },
        "normal::>s": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "acceptAfter": 2,
                    "backwards": false,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "::doc::normal::>S": {
            "kind": "motion",
            "label": "char pair back",
            "detail": "move/operate to previous character pair"
        },
        "normal::>S": [
            "modalkeys.cancelMultipleSelections",
            {
                "modalkeys.search": {
                    "casSensitive": true,
                    "acceptAfter": 2,
                    "backwards": true,
                    "offset": "start",
                    "wrapAround": true,
                    "executeAfter": [
                        "editor.action.indentLines",
                        "modalkeys.cancelMultipleSelections"
                    ],
                    "selectTillMatch": true
                }
            }
        ],
        "visual::aw": {
            "modalkeys.selectBetween": {
                "from": "\\W",
                "to": "\\W",
                "regex": true,
                "docScope": true,
                "inclusive": true
            }
        },
        "visual::iw": {
            "modalkeys.selectBetween": {
                "from": "\\W",
                "to": "\\W",
                "regex": true,
                "docScope": true,
                "inclusive": false
            }
        },
        "visual::ap": {
            "modalkeys.selectBetween": {
                "from": "^\\s*$",
                "to": "^\\s*$",
                "regex": true,
                "docScope": true,
                "inclusive": true
            }
        },
        "visual::ip": {
            "modalkeys.selectBetween": {
                "from": "^\\s*$",
                "to": "^\\s*$",
                "regex": true,
                "docScope": true,
                "inclusive": false
            }
        },
        "visual::a'": {
            "modalkeys.selectBetween": {
                "from": "'",
                "to": "'",
                "regex": false,
                "docScope": true,
                "inclusive": true
            }
        },
        "visual::i'": {
            "modalkeys.selectBetween": {
                "from": "'",
                "to": "'",
                "regex": false,
                "docScope": true,
                "inclusive": false
            }
        },
        "visual::a\"": {
            "modalkeys.selectBetween": {
                "from": "\"",
                "to": "\"",
                "regex": false,
                "docScope": true,
                "inclusive": true
            }
        },
        "visual::i\"": {
            "modalkeys.selectBetween": {
                "from": "\"",
                "to": "\"",
                "regex": false,
                "docScope": true,
                "inclusive": false
            }
        },
        "visual::a`": {
            "modalkeys.selectBetween": {
                "from": "`",
                "to": "`",
                "regex": false,
                "docScope": true,
                "inclusive": true
            }
        },
        "visual::i`": {
            "modalkeys.selectBetween": {
                "from": "`",
                "to": "`",
                "regex": false,
                "docScope": true,
                "inclusive": false
            }
        },
        "::doc::i(": {
            "kind": "motion",
            "label": "parens (exclusive)",
            "detail": "select text surrounded by parentheses (don't include parens)"
        },
        "visual::i(": "extension.selectParenthesis",
        "::doc::a(": {
            "kind": "motion",
            "label": "parens (inclusive)",
            "detail": "select text surrounded by parentheses (include parens)"
        },
        "visual::a(": "extension.selectParenthesisOuter",
        "::doc::i[": {
            "kind": "motion",
            "label": "braces (exclusive)",
            "detail": "select text surrounded by braces (don't include braces)"
        },
        "visual::i[": "extension.selectSquareBrackets",
        "::doc::a[": {
            "kind": "motion",
            "label": "braces (inclusive)",
            "detail": "select text surrounded by braces (include braces)"
        },
        "visual::a[": "extension.selectSquareBracketsOuter",
        "::doc::i{": {
            "kind": "motion",
            "label": "brackets (exclusive)",
            "detail": "select text surrounded by brackets (don't include brackets)"
        },
        "visual::i{": "extension.selectCurlyBrackets",
        "::doc::a{": {
            "kind": "motion",
            "label": "brackets (inclusive)",
            "detail": "select text surrounded by brackets (include brackets)"
        },
        "visual::a{": "extension.selectCurlyBracketsOuter",
        "::doc::i<": {
            "kind": "motion",
            "label": "carets (exclusive)",
            "detail": "select text surrounded by carets (don't include brackets)"
        },
        "visual::i<": "extension.selectAngleBrackets",
        "::doc::a<": {
            "kind": "motion",
            "label": "carets (inclusive)",
            "detail": "select text surrounded by carets (include brackets)"
        },
        "visual::a<": "extension.selectAngleBracketsOuter",
        "::doc::gd": {
            "kind": "action",
            "label": "go to definition",
            "detail": "jump to the definition under the symbol under the cursor"
        },
        "gd": "editor.action.revealDefinition",
        "::doc::gq": {
            "kind": "action",
            "label": "wrap text",
            "detail": "wrap text, keeping comment characters preserved (at startof line)"
        },
        "gq": "rewrap.rewrapComment",
        "::doc::/": {
            "kind": "motion",
            "label": "search →",
            "detail": "search forwards for text; all following characters that you type are included in the search. You must hit enter to complete entry."
        },
        "/": [
            {
                "modalkeys.search": {
                    "caseSensitive": true,
                    "wrapAround": true,
                    "register": "search",
                    "selectTillMatch": "mode == 'visual'"
                }
            }
        ],
        "::doc::?": {
            "kind": "motion",
            "label": "search ←",
            "detail": "search backwards for text; all following characters that you type are included in the search. You must hit enter to complete entry."
        },
        "?": {
            "modalkeys.search": {
                "backwards": true,
                "caseSensitive": true,
                "wrapAround": true,
                "register": "search",
                "selectTillMatch": "mode == 'visual'"
            }
        },
        "::doc::n": {
            "kind": "motion",
            "label": "search →",
            "detail": "go to the next search match"
        },
        "n": {
            "modalkeys.nextMatch": {
                "register": "search",
                "selectTillMatch": "mode == 'visual'"
            }
        },
        "::doc::N": {
            "kind": "motion",
            "label": "search ←",
            "detail": "go to the previous search match"
        },
        "N": {
            "modalkeys.previousMatch": {
                "register": "search",
                "selectTillMatch": "mode == 'visual'"
            }
        },
        "::doc::*": {
            "kind": "motion",
            "label": "match →",
            "detail": "go to next match of object under cursor (or current selection)"
        },
        "normal::*": [
            {
                "modalkeys.search": {
                    "text": "__wordstr",
                    "wrapAround": true,
                    "register": "search"
                }
            }
        ],
        "visual::*": [
            {
                "modalkeys.search": {
                    "text": "__selectstr",
                    "wrapAround": true,
                    "register": "search"
                }
            }
        ],
        "::doc::#": {
            "kind": "motion",
            "label": "match ←",
            "detail": "go to previous match of object under cursor (or current selection)"
        },
        "normal::#": [
            {
                "modalkeys.search": {
                    "text": "__wordstr",
                    "wrapAround": true,
                    "backwards": true,
                    "register": "search"
                }
            }
        ],
        "visual::#": [
            {
                "modalkeys.search": {
                    "text": "__selectstr",
                    "wrapAround": true,
                    "register": "search"
                }
            }
        ],
        "::doc:::": {
            "kind": "action",
            "label": "command",
            "detail": "open VSCode command palette"
        },
        ":": "workbench.action.showCommands",
        "::doc::z": {
            "kind": "mode",
            "label": "window",
            "detail": "some window related commands"
        },
        "::doc::Z": {
            "kind": "mode",
            "label": "window",
            "detail": "some window related commands"
        },
        "::doc::zz": {
            "kind": "action",
            "label": "save and close",
            "detail": "save and close active editor"
        },
        "zz": {
            "revealLine": {
                "lineNumber": "__line",
                "at": "center"
            }
        },
        "zt": {
            "revealLine": {
                "lineNumber": "__line",
                "at": "top"
            }
        },
        "zb": {
            "revealLine": {
                "lineNumber": "__line",
                "at": "bottom"
            }
        },
        "ZZ": [
            "workbench.action.files.save",
            "workbench.action.closeActiveEditor"
        ],
        "::doc::ZQ": {
            "kind": "action",
            "label": "close",
            "detail": "close active editor"
        },
        "ZQ": "workbench.action.closeActiveEditor"
    },
    "modalkeys.docKinds": [
        {
            "name": "motion",
            "description": "Select commands move the cursor and/or selections."
        },
        {
            "name": "operator",
            "description": "Operators are actions that take motions as suffix arguments (e.g. to delete (`d`) a word (`w`) you would type `dw`). If you wish to perform the operator action over a single line, you hit the operator key twice. In visual mode, an operator performs it's action over the selected text."
        },
        {
            "name": "action",
            "description": "Actions do something (usually to the text of a document)."
        },
        {
            "name": "history",
            "description": "History commands modify or use the history of executed commands, in some way."
        },
        {
            "name": "mode",
            "description": "Mode commands change the key mode, possibly completely changing what all of the keys do."
        },
        {
            "name": "count",
            "description": "Counts serve as prefix arguments to other commands, and usually determine how many times to repeat the commnad, unless otherwise specified."
        },
        {
            "name": "window",
            "description": "Window commands manipulate the window in some way."
        },
        {
            "name": "leader",
            "description": "Leaders serve as prefixes to an entire list of key commands"
        }
    ],
    "modalkeys.insertStatusText": "-- INSERT --",
    "modalkeys.normalStatusText": "-- __MODENAME__ --",
    "modalkeys.searchStatusText": "SEARCH",
    "modalkeys.selectStatusText": "-- VISUAL --",
    "projectManager.any.maxDepthRecursion": 1,
    "projectManager.git.baseFolders": [
        "~/source"
    ],
    "projectManager.git.maxDepthRecursion": 1,
    "projectManager.ignoreProjectsWithinProjects": true,
    "githubPullRequests.fileListLayout": "tree",
    "gitlens.statusBar.enabled": false,
    "gitlens.views.branches.avatars": false,
    "terminal.integrated.fontSize": 15,
    "diffEditor.ignoreTrimWhitespace": false,
    "rust-analyzer.inlayHints.chainingHints.enable": false,
    "rust-analyzer.inlayHints.parameterHints.enable": false,
    "rust-analyzer.inlayHints.typeHints.enable": false,
    "githubPullRequests.createOnPublishBranch": "never",
    "editor.formatOnSave": true,
    "window.commandCenter": true,
    "workbench.layoutControl.enabled": false,
    "window.menuBarVisibility": "toggle",
    "githubPullRequests.pullBranch": "never",
    "codetour.showMarkers": true,
    "workbench.colorTheme": "Gruvbox Material Dark",
    "workbench.iconTheme": "Monokai Pro (Filter Ristretto) Icons"
}